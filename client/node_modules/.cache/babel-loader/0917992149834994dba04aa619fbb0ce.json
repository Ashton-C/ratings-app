{"ast":null,"code":"import _classCallCheck from \"/home/ashton/react-projects/ratings-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ashton/react-projects/ratings-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ashton/react-projects/ratings-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ashton/react-projects/ratings-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ashton/react-projects/ratings-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ashton/react-projects/ratings-app/src/Components/Posts.js\";\nimport React, { Component } from \"react\";\nimport RItem from \"./RItem\";\n\nvar Posts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Posts, _React$Component);\n\n  function Posts() {\n    _classCallCheck(this, Posts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Posts).apply(this, arguments));\n  }\n\n  _createClass(Posts, [{\n    key: \"sortData\",\n    value: function sortData() {\n      var posts = [];\n      var data = this.props.data;\n\n      for (var item in data) {\n        //console.log(data[item]);\n        posts.push(React.createElement(RItem, {\n          name: data[item][\"name\"],\n          rating: data[item][\"rating\"],\n          description: data[item][\"description\"],\n          catagory: data[item][\"catagory\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }));\n      } //console.log(posts);\n\n\n      return posts;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Typical usage (don't forget to compare props):\n      if (this.props.data !== prevProps.data) {\n        this.fetchData(this.props.data);\n        this.sortData();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.sortData());\n    }\n  }]);\n\n  return Posts;\n}(React.Component);\n\nexport { Posts as default };","map":{"version":3,"sources":["/home/ashton/react-projects/ratings-app/src/Components/Posts.js"],"names":["React","Component","RItem","Posts","posts","data","props","item","push","prevProps","fetchData","sortData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAEqBC,K;;;;;;;;;;;;;+BACR;AACT,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,WAAK,IAAIE,IAAT,IAAiBF,IAAjB,EAAuB;AACrB;AACAD,QAAAA,KAAK,CAACI,IAAN,CACE,oBAAC,KAAD;AACE,UAAA,IAAI,EAAEH,IAAI,CAACE,IAAD,CAAJ,CAAW,MAAX,CADR;AAEE,UAAA,MAAM,EAAEF,IAAI,CAACE,IAAD,CAAJ,CAAW,QAAX,CAFV;AAGE,UAAA,WAAW,EAAEF,IAAI,CAACE,IAAD,CAAJ,CAAW,aAAX,CAHf;AAIE,UAAA,QAAQ,EAAEF,IAAI,CAACE,IAAD,CAAJ,CAAW,UAAX,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OAbQ,CAcT;;;AACA,aAAOH,KAAP;AACD;;;uCAEkBK,S,EAAW;AAC5B;AACA,UAAI,KAAKH,KAAL,CAAWD,IAAX,KAAoBI,SAAS,CAACJ,IAAlC,EAAwC;AACtC,aAAKK,SAAL,CAAe,KAAKJ,KAAL,CAAWD,IAA1B;AACA,aAAKM,QAAL;AACD;AACF;;;6BACQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKA,QAAL,EAAxB,CAAP;AACD;;;;EA5BgCX,KAAK,CAACC,S;;SAApBE,K","sourcesContent":["import React, { Component } from \"react\";\nimport RItem from \"./RItem\";\n\nexport default class Posts extends React.Component {\n  sortData() {\n    let posts = [];\n    let data = this.props.data;\n    for (let item in data) {\n      //console.log(data[item]);\n      posts.push(\n        <RItem\n          name={data[item][\"name\"]}\n          rating={data[item][\"rating\"]}\n          description={data[item][\"description\"]}\n          catagory={data[item][\"catagory\"]}\n        />\n      );\n    }\n    //console.log(posts);\n    return posts;\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.data !== prevProps.data) {\n      this.fetchData(this.props.data);\n      this.sortData();\n    }\n  }\n  render() {\n    return <div className=\"Posts\">{this.sortData()}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}